@model CupMetric.Models.RecetaIngredienteValoracion

@{
    ViewData["Title"] = "Receta";
    string usuario = Context.Session.GetString("USUARIO");
}

<style>
    .star {
        width: 30px;
        height: 30px;
        fill: #ddd; /* Color de estrella no seleccionada */
        transition: fill 0.2s;
    }

        .star.selected {
            fill: gold; /* Color de estrella seleccionada */
        }

        .star:hover {
            cursor: pointer;
            fill: gray;
        }
</style>

<div class="container mt-4 p-3 bg-body rounded-3 bg-opacity-10 box-shadow">
    <div>
        <a asp-action="Index" class="link-dark">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-left" viewBox="0 0 16 16">
                <path fill-rule="evenodd" d="M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8" />
            </svg> Volver a recetas
        </a>
    </div>
    <div class="row">
        <div class="col-md-6">
            <!-- Imagen en grande -->
            <img src="@Model.Receta.Imagen" alt="Imagen de @Model.Receta.Nombre" class="img-fluid">
        </div>
        <div class="col-md-6">
            <h1>@Model.Receta.Nombre</h1>
            <!-- Tiempo de preparación -->
            <p><strong>Tiempo de Preparación:</strong> @Model.Receta.TiempoPreparacion minutos</p>
            <!-- Visitas -->
            <p><strong>Visitas:</strong> @Model.Receta.Visitas</p>
            <!-- Instrucciones -->
            <h4 class="text-dark text-opacity-75">Pasos a seguir:</h4>
            <p>@Model.Receta.Instrucciones</p>
            <!-- Ingredientes -->
            <h4 class="text-dark text-opacity-50">Ingredientes: <br /> </h4>
            <ul class="list-group box-shadow">
                
                @for(int i = 0; i< Model.NombreIngrediente.Count; i++)
                {
                    <li class="list-group-item list-group-item-dark">
                        @Model.NombreIngrediente[i] - @Model.Cantidad[i] @if(Model.Medible[i]==true){ <span>gramos</span> }
                    </li>
                }
                
            </ul>
@*             <ul>
                <!-- Supongamos que los ingredientes están separados por comas en la base de datos -->
                @foreach (var ingrediente in Model.Ingredientes.Split(','))
                {
                    <li>@ingrediente.Trim()</li>
                }
            </ul> *@
            <!--COMPROBAR SI YA EXISTE VALORACION-->
            @if(usuario != null)
            {
            <hr class="my-3" />
                @if (ViewData["MENSAJE"] != null)
                {
                    <div class="alert alert-dark" role="alert">
                        @ViewData["MENSAJE"]
                    </div>
                }
            <form method="post">
                <div class="form-group">
                    <label for="valoracion">Deja tu valoración:</label>
                    <div class="d-flex align-items-center">
                        <!-- Estrellas de valoración -->
                        @for (int i = 1; i <= 5; i++)
                        {
                            <svg class="star @(Model.Valoracion >= i ? "selected" : "")" onclick="seleccionarEstrella(@i)" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                                <path d="M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z" />
                            </svg>
                        }
                    </div>
                    <input type="hidden" id="valoracion" name="valoracion" />
                </div>
            </form>

            }
        </div>
    </div>
</div>


@section Scripts {
    <script>
        function seleccionarEstrella(valor) {
            // Remover todas las clases 'selected'
            document.querySelectorAll('.star').forEach(star => star.classList.remove('selected'));
            // Añadir la clase 'selected' a las estrellas seleccionadas
            for (let i = 1; i <= valor; i++) {
                document.querySelector(`.star:nth-child(${i})`).classList.add('selected');
            }
            // Actualizar el valor del campo oculto
            document.getElementById('valoracion').value = valor;
            // Enviar el formulario automáticamente al seleccionar una estrella
            document.querySelector('form').submit();
        }
    </script>
}